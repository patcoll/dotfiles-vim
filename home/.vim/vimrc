set nocompatible      " Use vim, no vi defaults
set encoding=utf-8    " Set default encoding to UTF-8
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'twilight256.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tomtom/tcomment_vim'
Plugin 'itspriddle/ZoomWin'
Plugin 'ervandew/supertab'
Plugin 'tpope/vim-repeat'
Plugin 'godlygeek/tabular'

" snipmate
Plugin 'tomtom/tlib_vim'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

Plugin 'bling/vim-airline'
Plugin 'majutsushi/tagbar'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'tpope/vim-surround'
Plugin 'mxw/vim-jsx'
let g:jsx_ext_required = 0

" File formats
Plugin 'ap/vim-css-color'
Plugin 'elzr/vim-json'
Plugin 'othree/html5.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'chrisbra/csv.vim'
Plugin 'groenewege/vim-less'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'vim-scripts/Arduino-syntax-file'
Plugin 'guns/vim-clojure-static'
Plugin 'kchmck/vim-coffee-script'
Plugin 'tpope/vim-cucumber'
Plugin 'elixir-lang/vim-elixir'
Plugin 'jimenezrick/vimerl'
Plugin 'tpope/vim-git'
Plugin 'jnwhiteh/vim-golang'
Plugin 'tpope/vim-haml'
Plugin 'wlangstroth/vim-haskell'
Plugin 'pangloss/vim-javascript'
Plugin 'tpope/vim-liquid'
Plugin 'tpope/vim-markdown'
Plugin 'dsawardekar/ember.vim'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'mmalecki/vim-node.js'
Plugin 'ajf/puppet-vim'
Plugin 'tpope/vim-rails'
Plugin 'skwp/vim-rspec'
Plugin 'vim-ruby/vim-ruby'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'StanAngeloff/php.vim'
Plugin 'zah/nimrod.vim'
Plugin 'wting/rust.vim'
Plugin 'tpope/vim-speeddating'
Plugin 'jceb/vim-orgmode'
Plugin 'chriskempson/base16-vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required

" load the plugin and indent settings for the detected filetype
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

let mapleader = ","
let maplocalleader = ","

" Shortcut for commenting.
nmap <leader>/ :TComment<cr>j
vmap <leader>/ :TComment<cr>

" ZoomWin configuration
map <Leader><Leader> :ZoomWin<CR>

" Without setting this, ZoomWin restores windows in a way that causes
" equalalways behavior to be triggered the next time CommandT is used.
" This is likely a bludgeon to solve some other issue, but it works
set noequalalways

" Searching
nnoremap / /\v
vnoremap / /\v

colorscheme twilight256

" map semicolon to colon for less typing when we want to save
nnoremap ; :

" Make vertical split bar line character be a single space.
set fillchars+=vert:\|

" leader-space will toggle hlsearch
nnoremap <leader><space> :set hlsearch! hlsearch?<CR>

" leader-n will toggle nerdtree
nnoremap <leader>n :NERDTreeToggle<CR>
if !exists("NERDTreeIgnore")
  let NERDTreeIgnore=[]
  let NERDTreeIgnore=['\.pyc$', '\.pyo$', '\.rbc$', '\.rbo$', '\.class$', '\.o$', '\~$']
endif
let NERDTreeIgnore+=['^\.DS_Store$']
let NERDTreeIgnore+=['^__pycache__$']

" toggle line numbers
nnoremap <leader>N :set number! number?<CR>

" toggle paste mode
nnoremap <leader>p :set paste! paste?<CR>

" map tab to %, which jumps to the matching brace
nnoremap <tab> %
vnoremap <tab> %

" numbered tab shortcuts
nnoremap 1t 1gt
nnoremap 2t 2gt
nnoremap 3t 3gt
nnoremap 4t 4gt
nnoremap 5t 5gt
nnoremap 6t 6gt
nnoremap 7t 7gt
nnoremap 8t 8gt
nnoremap 9t 9gt

let g:syntastic_mode_map={ 'mode': 'active',
                     \ 'active_filetypes': [],
                     \ 'passive_filetypes': ['html'] }

let g:syntastic_warning_symbol='?>'

if isdirectory(argv(0))
  bd
  autocmd VimEnter * exe "cd" argv(0)
  autocmd VimEnter * NERDTree
endif

au BufNewFile,BufRead *.php setlocal expandtab shiftwidth=4 softtabstop=4

" Put at the very end of your .vimrc file.

function! PhpSyntaxOverride()
  hi! def link phpDocTags  phpDefine
  hi! def link phpDocParam phpType
endfunction

augroup phpSyntaxOverride
  autocmd!
  autocmd FileType php call PhpSyntaxOverride()
augroup END

